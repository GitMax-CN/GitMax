service: GitMax

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

custom:
  defaultStage: dev
  productionStream: arn:aws:dynamodb:us-west-2:151302725877:table/Users/stream/2016-12-16T22:04:17.359
  devStream: arn:aws:dynamodb:us-west-2:594750710208:table/Users/stream/2016-12-27T16:29:37.237

provider:
  name: aws
  runtime: nodejs4.3
  stage: ${opt:stage, self:custom.defaultStage}
  # Deploys to dev stage by default.
  # To deploy for production, run 'serverless deploy --stage production'
  profile: ${self:provider.stage}Profile
  region: us-west-2

# you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-west-2:*:*"
    - Effect: Allow
      Action:
        - dynamodb:DescribeStream
        - dynamodb:GetRecords
        - dynamodb:GetShardIterator
        - dynamodb:ListStreams
      Resource: "arn:aws:dynamodb:us-west-2:*:table/test"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  upsertUser:
    handler: users.upsertUser
    memorySize: 128 # optional, default is 1024
    timeout: 10 # optional, default is 6
    events:
      - http:
          path: user/gitUpsert # User initial login
          method: post
          cors: true
      - http:
          path: user/confUpdate # User update configuration
          method: post
          cors: true

  followUsers:
    handler: users.followUsers
    memorySize: 512 # optional, default is 1024
    timeout: 60 # optional, default is 6
    events:
      - http:
          path: user/follow # follow users
          method: post
          cors: true
#      - stream: ${self:custom.${self:provider.stage}Stream}

  loginStart:
    handler: login.loginStart
    memorySize: 128
    events:
      - http:
          path: loginStart
          method: get
          cors: true

  getToken:
    handler: login.getToken
    memorySize: 128
    events:
      - http:
          path: getToken
          method: get
          cors: true


# 当前实用的resource - you can add CloudFormation resource templates here

resources:
  Resources:
    UsersTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: N
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 100
          WriteCapacityUnits: 100
        TableName: 'Users'
        StreamSpecification:
          StreamViewType: NEW_IMAGE


    FriendsTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: userId
            AttributeType: N
          -
            AttributeName: friendId
            AttributeType: N
        KeySchema:
          -
            AttributeName: userId
            KeyType: HASH
          -
            AttributeName: friendId
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 100
          WriteCapacityUnits: 100
        TableName: 'Friends'
        StreamSpecification:
          StreamViewType: NEW_IMAGE

#    UserIdsTable:
#      Type: 'AWS::DynamoDB::Table'
#      DeletionPolicy: Retain
#      Properties:
#        AttributeDefinitions:
#          -
#            AttributeName: id
#            AttributeType: S
#        KeySchema:
#          -
#            AttributeName: id
#            KeyType: HASH
#        ProvisionedThroughput:
#          ReadCapacityUnits: 10
#          WriteCapacityUnits: 10
#        TableName: 'UserIds'

#plugins:
#  - serverless-client-s3
#
#custom:
#  client:
#    bucketName: www.gitmax.cn
